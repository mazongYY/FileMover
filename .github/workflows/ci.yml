name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install rarfile py7zr

    - name: Basic syntax check
      run: |
        python -m py_compile main.py

    - name: Test import
      run: |
        python -c "import main; print('Import successful')"

  build:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install rarfile py7zr

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name=FileMover --clean main.py

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: FileMover-Build
        path: dist/FileMover.exe
        retention-days: 30
